>>> 11번
==================================================
아래와 같은 링크가 입력되면, groupId 값을 추출해서 사용할 것

예시 링크: https://teams.microsoft.com/l/message/19:DummyMessageId1234567890@thread.taez2/1750000000000?tenantId=00000000-0000-0000-0000-000000000000&groupId=11111111-2222-3333-4444-555555555555&parentMessageId=1750000000000&teamName=Sample%20Team&channelName=General&createdTime=1750000000000`

groupId: 11111111-2222-3333-4444-555555555555

>>> 12번
==================================================
아래와 같은 링크가 입력되면, channeld 값을 추출해서 사용할 것

예시 링크: https://teams.microsoft.com/l/message/19:DummyMessageId1234567890@thread.taez2/1750000000000?tenantId=00000000-0000-0000-0000-000000000000&groupId=11111111-2222-3333-4444-555555555555&parentMessageId=1750000000000&teamName=Sample%20Team&channelName=General&createdTime=1750000000000

channelId: 19:DummyMessageId1234567890@thread.taez2

-----------------------------------------------------------

아래와 같은 링크가 입력되면, messageId 값을 추출해서 사용할 것

예시 링크: https://teams.microsoft.com/l/message/19:DummyMessageId1234567890@thread.taez2/1750000000000?tenantId=00000000-0000-0000-0000-000000000000&groupId=11111111-2222-3333-4444-555555555555&parentMessageId=1750000000000&teamName=Sample%20Team&channelName=General&createdTime=1750000000000

messageId: 1750000000000

>>> 14번
==================================================
1. 사용자로 부터 링크를 입력받으면, 해당 링크를 적절히 파싱해서 <채널 메시지의 회신 나열> 을 실행한다.

>>> 17번
==================================================
1. 사용자로 부터 링크를 입력받으면, 해당 링크를 적절히 파싱해서 <채널 메시지의 회신 나열> 을 실행한다.
2. 각 value들에 대해서 body.content, createdDateTime, from.user.displayName 값만 추출하여 저장한다. 
3. body.content에 날짜나 시간 관련 내용이 담겨 있는 것들만 남기고 나머지는 삭제한다. 그리고 남은 값들을 출력한다.

>>> 19번
==================================================
1. 사용자로 부터 링크를 입력받으면, 해당 링크를 적절히 파싱해서 <채널 메시지의 회신 나열> 을 실행한다.
2. 각 value들에 대해서 body.content, createdDateTime, from.user.displayName 값만 추출하여 저장한다. 
3. body.content에 날짜나 시간 관련 내용이 담겨 있는 것들만 남기고 나머지는 삭제한다. 
4. 남은 값들을 다음과 같은 형식으로 변환 시킨다. { "이름": "홍길동", "시작 날짜": "08/25/2025", "끝나는 날짜": "09/01/2025" } 이번 주 수요일, 다음 주 금요일, 다다음주 화요일, 3일간, 이틀간 등의 상대적인 날짜 표현들은 createDateTime의 날짜로 부터 계산하여 mm/dd/yyyy 형식으로 변환해주세요. 
5. 변환 완료된 최종 JSON만 출력해주세요.

>>> 29번
==================================================
다음과 같은 형식이어야 합니다.
{
    "이름": "홍길동",
    "시작 날짜": "08/25/2025",
    "끝나는 날짜": "09/01/2025"
}

>>> 31번
==================================================
1. 사용자로 부터 링크를 입력받으면, 해당 링크를 적절히 파싱해서 <채널 메시지의 회신 나열> 을 실행한다.
2. 각 value들에 대해서 body.content, createdDateTime, from.user.displayName 값만 추출하여 저장한다. 
3. body.content에 날짜나 시간 관련 내용이 담겨 있는 것들만 남기고 나머지는 삭제한다. 
4. 남은 값들을 다음과 같은 형식으로 변환 시킨다. { "이름": "홍길동", "시작 날짜": "08/25/2025", "끝나는 날짜": "09/01/2025" } 이번 주 수요일, 다음 주 금요일, 다다음주 화요일, 3일간, 이틀간 등의 상대적인 날짜 표현들은 createDateTime의 날짜로 부터 계산하여 mm/dd/yyyy 형식으로 변환해주세요. 
5. 처리된 각 JSON 값에 대하여 <테이블에 행 추가> 작업을 실행합니다. JSON 레코드의 개수만큼 진행합니다.